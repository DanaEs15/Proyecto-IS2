/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectois2;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniela Espinosa
 */
public class Frm_ModificaCliente extends javax.swing.JFrame {
    private Frm_ActualizaDatosCliente ActualizaDatosCliente;

    DefaultTableModel model;
    public Frm_ModificaCliente() {
        initComponents();
        AjustarVentana();
        try{
            mostrarTabla();
        }catch(Exception e){
            
        }
    }
    
    private void AjustarVentana(){
        //Centrar Ventana
        this.setLocationRelativeTo(null);  
        
        //Bloquear Tamanio
        this.setResizable(false);
    }
    
    public final void mostrarTabla() throws Exception{
    DefaultTableModel modelo = new DefaultTableModel();
        AccesoBD bd = new AccesoBD();
        ResultSet rs = bd.getTabla("SELECT cedula, nombres, apellidos, direccion, telefono FROM cliente");
        modelo.setColumnIdentifiers(new Object[]{"Cedula", "Nombres", "Apellidos", "Direccion","Telefono"});
        try{
            while(rs.next()){
                modelo.addRow(new Object[]{rs.getString("cedula"), rs.getString("nombres"),
                rs.getString("apellidos"), rs.getString("direccion"), rs.getString("telefono")});
            }
            jtMuestraClientesParaModificar.setModel(modelo);
        }
        catch(SQLException e){
            //System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpModificaCliente = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMuestraClientesParaModificar = new javax.swing.JTable();
        lblTituloModificaCliente = new javax.swing.JLabel();
        btnBuscaModificaCliente = new javax.swing.JButton();
        txtCedulaBuscarModifica = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modifica Cliente");

        jpModificaCliente.setBackground(new java.awt.Color(255, 241, 207));
        jpModificaCliente.setToolTipText("Modificar Cliente");

        jtMuestraClientesParaModificar = new javax.swing.JTable(){
            public boolean isCellEditable (int rowIndex, int colIndex){
                return false;
            }
        };
        jtMuestraClientesParaModificar.setBackground(new java.awt.Color(255, 241, 207));
        jtMuestraClientesParaModificar.setForeground(new java.awt.Color(38, 63, 68));
        jtMuestraClientesParaModificar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtMuestraClientesParaModificar.setGridColor(new java.awt.Color(38, 63, 68));
        jtMuestraClientesParaModificar.getTableHeader().setReorderingAllowed(false);
        jtMuestraClientesParaModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtMuestraClientesParaModificarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtMuestraClientesParaModificar);

        lblTituloModificaCliente.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 36)); // NOI18N
        lblTituloModificaCliente.setForeground(new java.awt.Color(38, 63, 68));
        lblTituloModificaCliente.setText("BÃºsqueda de Cliente");

        btnBuscaModificaCliente.setBackground(new java.awt.Color(255, 211, 105));
        btnBuscaModificaCliente.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnBuscaModificaCliente.setForeground(new java.awt.Color(1, 86, 104));
        btnBuscaModificaCliente.setText("Modificar");
        btnBuscaModificaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaModificaClienteActionPerformed(evt);
            }
        });

        txtCedulaBuscarModifica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulaBuscarModificaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpModificaClienteLayout = new javax.swing.GroupLayout(jpModificaCliente);
        jpModificaCliente.setLayout(jpModificaClienteLayout);
        jpModificaClienteLayout.setHorizontalGroup(
            jpModificaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpModificaClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpModificaClienteLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtCedulaBuscarModifica, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnBuscaModificaCliente)
                .addGap(181, 181, 181))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpModificaClienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTituloModificaCliente)
                .addGap(81, 81, 81))
        );
        jpModificaClienteLayout.setVerticalGroup(
            jpModificaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpModificaClienteLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(lblTituloModificaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jpModificaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscaModificaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCedulaBuscarModifica, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpModificaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpModificaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscaModificaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaModificaClienteActionPerformed
        // TODO add your handling code here:
        Cliente c = new Cliente(); String _cedula;
        _cedula = txtCedulaBuscarModifica.getText();
        ProyectoIS2._Ced = _cedula;
        System.out.println(ProyectoIS2._Ced);
        try {
            if(c.verificaCedula(_cedula).equals(_cedula)){
                txtCedulaBuscarModifica.setText("");
                ActualizaDatosCliente = new Frm_ActualizaDatosCliente();
                ActualizaDatosCliente.setVisible(true);
                setVisible(false);
            }
            else{
                JOptionPane.showMessageDialog(null, "La CEDULA ingresada no se encuentra"
                    + " registrada, ingrese una de las que se muestran en la tabla...", "",
                    JOptionPane.INFORMATION_MESSAGE);
                txtCedulaBuscarModifica.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Seleccion o ingrese un codigo valido!!!!", "", JOptionPane.WARNING_MESSAGE);
            txtCedulaBuscarModifica.setText("");
            try {
                mostrarTabla();
            } catch (Exception ex) {
                //Logger.getLogger(Frm_ModificaCliente.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(e.toString());
            }
        }
    }//GEN-LAST:event_btnBuscaModificaClienteActionPerformed

    private void txtCedulaBuscarModificaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaBuscarModificaKeyPressed
        // TODO add your handling code here:
        AccesoBD bd = new AccesoBD();
        String[] Titulos = {"CÃ©dula", "Nombres", "Apellidos", "DirecciÃ³n", "TelÃ©fono"};
        String[] Registro = new String[50];

        String sql = "SELECT * FROM cliente WHERE cedula LIKE '%" + txtCedulaBuscarModifica.getText()+ "%'"
        + "OR nombres LIKE '%" + txtCedulaBuscarModifica.getText() + "%'"
        + "OR apellidos LIKE '%" + txtCedulaBuscarModifica.getText() + "%'"
        + "OR direccion LIKE '%" + txtCedulaBuscarModifica.getText() + "%'"
        + "OR telefono LIKE '%" + txtCedulaBuscarModifica.getText() + "%'";

        model = new DefaultTableModel(null,Titulos);
        try {
            bd.conectaBD();
            Statement sta = bd.getConexion().createStatement();
            ResultSet rs= sta.executeQuery(sql);

            while(rs.next()){
                Registro[0] = rs.getString("cedula");
                Registro[1] = rs.getString("nombres");
                Registro[2] = rs.getString("apellidos");
                Registro[3] = rs.getString("direccion");
                Registro[4] = rs.getString("telefono");
                model.addRow(Registro);
            }
            jtMuestraClientesParaModificar.setModel(model);
        } catch (Exception ex) {
            //Logger.getLogger(Frm_VentaProductos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCedulaBuscarModificaKeyPressed

    private void jtMuestraClientesParaModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtMuestraClientesParaModificarMouseClicked
        // TODO add your handling code here:
        int col = jtMuestraClientesParaModificar.getSelectedRow();
        
        txtCedulaBuscarModifica.setText(jtMuestraClientesParaModificar.getModel().
                getValueAt(col, 0).toString());
    }//GEN-LAST:event_jtMuestraClientesParaModificarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_ModificaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_ModificaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_ModificaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_ModificaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_ModificaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscaModificaCliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpModificaCliente;
    private javax.swing.JTable jtMuestraClientesParaModificar;
    private javax.swing.JLabel lblTituloModificaCliente;
    private javax.swing.JTextField txtCedulaBuscarModifica;
    // End of variables declaration//GEN-END:variables
}
